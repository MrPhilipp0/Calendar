{"version":3,"sources":["components/Header/Header.js","components/LeftSide/Importants.js","components/Calendar/Day.js","components/Calendar/DaysList.js","components/Calendar/Calendar.js","components/Calendar/Task.js","components/Calendar/TaskToContext.js","components/Calendar/TasksList.js","components/Calendar/Tasks.js","components/Calendar/AddTask.js","components/Calendar/Pages.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Importants","Day","props","actualDate","Date","classList","getDate","getMonth","getFullYear","keys","link","Number","slice","to","number","DaysList","date","month","year","firstDayOfMonth","lastDayOfMonth","indexOfFirstDayOfMonth","getDay","numberOfLastDayOfMonth","objects","length","j","i","key","days","Days","map","day","NAMES_MONTH","Calendar","click","style","display","borderBottom","marginBottom","paddingBottom","flexDirection","justifyContent","onClick","id","Task","React","useState","editing","setEditing","shortName","shortText","setShortText","text","setText","backText","setBackText","handleSubmit","e","preventDefault","handleShortTextChange","target","value","handleTextChange","handleEditClick","back","handleBackClick","handleSaveClick","save","handleDeleteClick","delete","onSubmit","type","onChange","cols","rows","placeholder","TaskContext","createContext","TasksList","useContext","tasksList","setTasksList","array","index","handleSaveTask","findIndex","item","tasks","handleDeleteTask","filter","task","Tasks","location","useLocation","taskDate","pathname","split","linkToAddTask","taskCounter","AddTask","tasksLink","currentTask","push","Pages","path","element","testTasks","DATE","App","setDate","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0368a924.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <p>HEADER</p>\r\n    </header>\r\n  );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nconst Importants = () => {\r\n  return (\r\n    <div className='importants'>\r\n      <p> Important tasks </p>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Importants;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Day = (props) => {\r\n  const actualDate = new Date();\r\n  let classList = 'Days'; //zmienna zarządzająca klasami stylów \r\n  const actualDay = actualDate.getDate() + '.' + actualDate.getMonth() + '.' + actualDate.getFullYear(); \r\n  if (actualDay === props.keys) classList += ' actualDay';\r\n\r\n  const link = `/tasks/${props.keys}`; // stała z linkiem do danego dnia\r\n\r\n  let noDay = Number(props.keys.slice(0,1)); // zmienna divów bez danego dnia ........ \r\n  \r\n  // funkcja która dla dnia który istnieje tworzy konkretny blok z linkiem do niego, jeżeli nie istnieje to tworzy pusty div.\r\n  const day = () => {\r\n    if (noDay) {\r\n      return (\r\n        <Link className='link' to={link} >\r\n          <div className={classList} key={props.keys}> {props.number} </div>\r\n        </Link>\r\n      )\r\n    } else {\r\n      return <div className='noDays' key={props.keys}> . </div>\r\n    }\r\n  }\r\n  \r\n  return ( \r\n    day()\r\n  );\r\n}\r\n \r\nexport default Day;","import React from 'react';\r\nimport Day from './Day';\r\n\r\nconst DaysList = ({date}) => {\r\n\r\n  // const day = date.day;\r\n  const month = date.month;\r\n  const year = date.year;\r\n  const firstDayOfMonth = new Date(year, month, 1,0,0,0,0); //pierwszy dzień w danym miesiacu\r\n  const lastDayOfMonth = new Date(year, month + 1, 0,0,0,0,0); //ostatni dzień w miesiącu\r\n  const indexOfFirstDayOfMonth = firstDayOfMonth.getDay(); //(1 - pon, 2 - wt, 3-śr, ...)\r\n  const numberOfLastDayOfMonth = lastDayOfMonth.getDate(); // liczba dni w miesiącu\r\n\r\n  const objects = []; //pomocnicza tablica do tworzenia dni\r\n  objects.length = 42;\r\n\r\n  // iterowanie po tablicy 42 elementów (tak jakby 6 tygodni), przypisanie wartości dopiero od pierwszego dnia w miesiącu oraz dnia tygodnia\r\n  const days = () => {\r\n    let j=1;\r\n    for(let i=0; i < objects.length; i++) {\r\n      if(i >= indexOfFirstDayOfMonth - 1 && i <= numberOfLastDayOfMonth - 2 + indexOfFirstDayOfMonth) {\r\n        objects[i] = {\r\n          number: j,\r\n          key: j + '.' + month + '.' + year,\r\n        };\r\n        j++;\r\n      } else { \r\n        objects[i] = {\r\n          number: 0,\r\n          key: '0' + i + '.' + month + '.' + year,\r\n        };\r\n      }\r\n    }\r\n  }\r\n  \r\n  days();\r\n  //obcięcie tablicy tworzącej dni do 5 tygodni, jeżeli miesiąc mieści się w nich.\r\n  if (objects[35].number === 0) objects.length = 35; \r\n\r\n  // mapowanie po tablicy objects w celu utworzenia wszystkich dni w miesiącu\r\n  const Days = objects.map(day => <Day key={day.key} keys={day.key} number={day.number} date={date}/>);\r\n  \r\n  return ( \r\n    <div>\r\n      {Days}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default DaysList;","import React from 'react';\r\nimport DaysList from './DaysList';\r\n\r\nexport const NAMES_MONTH = ['January', 'February', 'March', 'April', 'May', 'June','July','August', 'September', 'October', 'November', 'December'];\r\n\r\nconst Calendar = ({date, click}) => {\r\n\r\n  return ( \r\n\r\n    <div className='calendar'>\r\n      <div style={{\r\n        display:'flex',\r\n        borderBottom:'solid 2px black', \r\n        marginBottom:'20px', \r\n        paddingBottom:'10px', \r\n        flexDirection:'row',\r\n        justifyContent:'space-between'}}>\r\n        \r\n        {/* Button przejścia do poprzedniego miesiaca */}\r\n        <button onClick={click} id={'left'}>Left</button>\r\n\r\n        {/* Dodać button z 'przejdź do ... miesiąca i ... roku' */}\r\n\r\n        {/* Wyświetlanie miesiaca i roku w którym jesteśmy w kalendarzu */}\r\n        <h1> {date.year}, {NAMES_MONTH[date.month]} </h1>\r\n\r\n        {/* Button przejścia do aktualnego miesiaca i roku */}\r\n        <button onClick={click} id={'today'}>Today</button>\r\n\r\n        {/* Button przejścia do następnego miesiąca */}\r\n        <button onClick={click} id={'right'}>Right</button>\r\n      </div>\r\n\r\n      {/* renderowanie dni w danym miesiącu */}\r\n      <DaysList date={date}/>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Calendar;","import React from 'react';\r\nimport '../../styles/Task.css';\r\n\r\nconst Task = (props) => {\r\n\r\n  const [editing, setEditing] = React.useState(false); //flaga edytowania\r\n  const [shortText, setShortText] = React.useState(props.shortName); //stan którkiej nazwy\r\n  const [text, setText] = React.useState(props.text); //stan opisu\r\n  const [backText, setBackText] = React.useState({shortText, text}); //backup podczas edycji\r\n  \r\n  const handleSubmit = e => e.preventDefault();\r\n\r\n  const handleShortTextChange = e => { //aktualizacja krótkiej nazwy\r\n    setShortText(shortText => e.target.value);\r\n  }\r\n\r\n  const handleTextChange = e => { //aktualizacja opisu\r\n    setText(text => e.target.value);\r\n  }\r\n\r\n  const handleEditClick = (e) => { //działanie buttona edit\r\n    setEditing(editing => !editing);\r\n    const back = {shortText, text};\r\n    setBackText(backText => back)\r\n  }\r\n\r\n  const handleBackClick = () => { //działanie buttona back\r\n    setEditing(editing => !editing);\r\n    setShortText(shortText => backText.shortText)\r\n    setText(text => backText.text);\r\n  }\r\n\r\n  const handleSaveClick = () => { //działanie buttona save\r\n    setEditing(editing => !editing);\r\n    props.save(props.id, shortText, text);\r\n  }\r\n\r\n  const handleDeleteClick = () => { //działanie buttona delete task\r\n    props.delete(props.id);\r\n  }\r\n\r\n  const TaskVariant = () => { //wariant wyświetlania taska, w zależności czy jest w stanie edycji czy nie\r\n    if (editing) {\r\n      return (\r\n        <form onSubmit={handleSubmit}>\r\n          <li>\r\n            <div className='taskArea' >\r\n              <input type='text' value={shortText} onChange={handleShortTextChange}/>\r\n              <textarea cols=\"25\" rows=\"10\" value={text} placeholder=\"Edit task\" onChange={handleTextChange}></textarea>\r\n            </div>\r\n            <div>\r\n              <button onClick={handleSaveClick}>Save</button>\r\n              <button onClick={handleBackClick}>Back</button>\r\n            </div>\r\n          </li>\r\n        </form>\r\n      )\r\n    } else {\r\n      return (\r\n        <li>\r\n          <div className='taskArea' >\r\n            <h3>{shortText}</h3>\r\n            <p>{text}</p>\r\n          </div>\r\n          <div>\r\n            <button onClick={handleEditClick}>Edit</button>\r\n            <button onClick={handleDeleteClick}>Delete</button>\r\n          </div>\r\n        </li>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    TaskVariant()    \r\n  )\r\n}\r\n \r\nexport default Task;","import React from 'react';\r\n\r\nexport const TaskContext = React.createContext();\r\n","import React  from 'react';\r\nimport Task from './Task';\r\nimport { TaskContext } from './TaskToContext';\r\n\r\nconst TasksList = () => {\r\n  \r\n  const {tasksList, setTasksList} = React.useContext(TaskContext);\r\n\r\n  let array = []; // pomocnicza tablica w celu aktualizacji stanu\r\n  let index = null;\r\n\r\n  const handleSaveTask = (id, shortName, text) => { //aktualizacja stanu tasków\r\n    array = [...tasksList];\r\n    index = array.findIndex(item => item.id === id);\r\n    array[index].shortName = shortName;\r\n    array[index].text = text;\r\n    setTasksList(tasks => array);\r\n  }\r\n\r\n  const handleDeleteTask = (id) => { //usuwanie taska\r\n    array = [...tasksList];\r\n    array = array.filter(task => task.id !== id);\r\n    setTasksList(tasks => array);\r\n  }\r\n\r\n  // Wyświetlanie wszystkich zadań (aktualnie wszystkich, później z danego dnia)\r\n  const Tasks = () => tasksList.map(task => <Task key={task.id} id={task.id} shortName={task.shortName} text={task.text} save={handleSaveTask} delete={handleDeleteTask}/>)\r\n\r\n  return (\r\n    <div>\r\n      {tasksList.length > 0 ? Tasks() : null}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default TasksList;","import React from 'react';\r\nimport { NAMES_MONTH } from \"./Calendar\";\r\nimport TasksList from \"./TasksList\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport '../../styles/TasksMenu.css';\r\n\r\nconst Tasks = () => {\r\n  const location = useLocation();\r\n\r\n\r\n  const taskDate = location.pathname.slice(7).split('.'); //użycie lokalizacji w celu zdobycia daty konkretnego dnia, następnie rozdzielenie do tablicy numeru dnia, miesiąca i roku\r\n  const linkToAddTask = `/tasks/${location.pathname.slice(7)}/addTask`;\r\n\r\n  return ( \r\n    <div className=\"calendar\">\r\n\r\n      {/* tzw. header */}\r\n      <header className='headerTasks'> \r\n        <h2>TASKS</h2>\r\n        <h2>{taskDate[0]} {NAMES_MONTH[taskDate[1]]} {taskDate[2]}</h2>\r\n      </header>\r\n\r\n      <section className='mainSectionTasks'>\r\n\r\n        {/* Lewa część */}\r\n        <div className='leftSectionTasks'>\r\n          <TasksList />\r\n        </div>\r\n\r\n        {/* Prawa część */}\r\n        <div className='rightSectionTasks'>\r\n          \r\n          <Link to={linkToAddTask}> <button>Add new task</button> </Link>\r\n          <Link to='/'> <button>Back to calendar</button> </Link>\r\n        </div>\r\n        <div>\r\n        </div>\r\n\r\n      </section>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Tasks;","import React from 'react';\r\nimport { NAMES_MONTH } from './Calendar';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { TaskContext } from './TaskToContext';\r\n\r\nlet taskCounter = 2;\r\n\r\nconst AddTask = () => {\r\n\r\n  const [shortText, setShortText] = React.useState(''); //stan którkiej nazwy\r\n  const [text, setText] = React.useState(''); //stan opisu\r\n  const {tasksList, setTasksList} = React.useContext(TaskContext);\r\n \r\n  const handleSubmit = e => e.preventDefault();\r\n\r\n  const handleShortTextChange = e => { //aktualizacja krótkiej nazwy\r\n    setShortText(shortText => e.target.value);\r\n  }\r\n\r\n  const handleTextChange = e => { //aktualizacja opisu\r\n    setText(text => e.target.value);\r\n  }\r\n\r\n  const sendTask = () => {\r\n    const currentTask = {\r\n      shortName: shortText,\r\n      text: text,\r\n      id: taskCounter,\r\n    };\r\n    let array = [...tasksList];\r\n    array.push(currentTask);\r\n    setTasksList(tasksList => array);\r\n\r\n    setShortText(shortText => '');\r\n    setText(text => '');\r\n    taskCounter++;\r\n\r\n  }\r\n\r\n  let location = useLocation();\r\n  const taskDate = location.pathname.slice(7,location.pathname.length-8).split('.');\r\n  const tasksLink = location.pathname.slice(7,location.pathname.length-8);\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n\r\n      {/* tzw. header */}\r\n      <header className='headerTasks'> \r\n        <h2>ADD NEW TASK</h2>\r\n        <h2>{taskDate[0]} {NAMES_MONTH[taskDate[1]]} {taskDate[2]}</h2>\r\n      </header>\r\n\r\n      <section className='mainSectionTasks'>\r\n\r\n        {/* Lewa część */}\r\n        <div className='leftSectionTasks'>\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <h2>Short task name:</h2>\r\n            <input type='text' placeholder='Max 10 chars' value={shortText} onChange={handleShortTextChange} />\r\n\r\n            <h2>Description: </h2>\r\n            <textarea cols=\"25\" rows=\"10\" value={text} placeholder=\"Write task description\" onChange={handleTextChange}></textarea>\r\n\r\n          </form>\r\n        </div>\r\n\r\n        {/* Prawa część */}\r\n        <div className='rightSectionTasks'>\r\n          \r\n          <Link to={'/tasks/' + tasksLink}>  <button type='submit' onClick={sendTask}> SEND </button> </Link>\r\n          <Link to={'/tasks/' + tasksLink}> <button>Back</button> </Link>\r\n        </div>\r\n\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Calendar from './Calendar';\r\nimport Tasks from './Tasks';\r\nimport AddTask from './AddTask';\r\n\r\nconst Pages = ({click, date}) => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Calendar click={click} date={date}/>} />\r\n      <Route path=\"/tasks/:id\" element={<Tasks/>} />\r\n      <Route path=\"/tasks/:id/addTask\" element ={<AddTask/>} />\r\n    </Routes>\r\n  );\r\n}\r\n \r\nexport default Pages;","import React, {useState} from 'react';\nimport Header from './components/Header/Header';\nimport Importants from './components/LeftSide/Importants';\nimport Pages from './components/Calendar/Pages';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport { TaskContext } from './components/Calendar/TaskToContext';\n\nimport './styles/App.css';\n\nconst testTasks = [ // pomocnicza tablica z taskami {po przeniesieniu do JSONa będzie usunięta}\n  {\n    id: 0, // id zmienione będzie na np. 8.11.2021\n    shortName: 'Short name 1',\n    text: 'Text 1',\n  },\n  {\n    id: 1,\n    shortName: 'Short name 2',\n    text: 'Text 2',\n  }\n];\n\n\nconst App = () => {\n  \n  const [date, setDate] = useState(DATE); //główny stan zarządzający datą\n  const [tasksList, setTasksList] = useState(testTasks);\n\n  // funkcja zarządzająca przyciskami na głównej stronie kalendarza (przejście w lewo, prawo, today itd)\n  const handleClick = e => {\n    let month = date.month;\n    let year = date.year;\n\n    if (e.target.id === 'left') {\n      month -= 1;\n      if (month < 0) {\n        year -= 1;\n        month = 11;\n      }\n      setDate({\n          day: date.day,\n          month: month,\n          year: year,\n      })\n    } else if (e.target.id === 'right') {\n      month += 1;\n      if (month > 11) {\n        year += 1;\n        month = 0;\n      }\n      setDate({\n        day: date.day,\n        month: month,\n        year: year,\n    })\n    } else if (e.target.id === 'today') {\n      setDate({\n        day: DATE.day,\n        month: DATE.month,\n        year: DATE.year,\n    })\n    }\n  }\n\n  return (\n    <Router>\n      <TaskContext.Provider value={{tasksList, setTasksList}}>\n        <div className='app'>\n        \n          {/* komponent header */}\n          <Header />\n          <div className='main'>\n\n            {/* komponent z ważnymi zadaniami */}\n            <Importants/>\n\n            {/* Zmiana na przejście z kalendarza na zadania danego dnia */}\n            <Pages click={handleClick} date={date}/>\n\n          </div>\n        </div>\n      </TaskContext.Provider>\n    </Router>\n  );\n};\n\n// zczytywanie aktualnej daty podczas pierwszego włączenia apki\nconst actualDate = new Date();\n// const time = actualDate.getTime();\nconst DATE = {\n  day: actualDate.getDate(),\n  month: actualDate.getMonth(),\n  year: actualDate.getFullYear(),\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}